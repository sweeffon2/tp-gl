/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.emp.gl.gui;

import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import org.emp.gl.core.lookup.Lookup;
import org.emp.gl.timer.service.TimerChangeListener;
import org.emp.gl.timer.service.TimerService;

import java.beans.PropertyChangeEvent;
import java.util.logging.Logger;
import org.emp.gl.model.Watch;

/**
 *
 * @author sweeffon
 */
public class WatchViewer extends javax.swing.JFrame implements TimerChangeListener {

    /**
     * Creates new form WatchViewer
     */
    Watch watch = new Watch();
    
    Logger logger = Logger.getLogger(WatchViewer.class.getName()) ;

    public WatchViewer() {
        initComponents();
        Lookup.getInstance().getService(TimerService.class).addTimeChangeListener(this);

        addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent fe) {
                addAsListener(fe);
            }

            @Override
            public void focusLost(FocusEvent fe) {
                //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
            }

        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        hh = new javax.swing.JLabel();
        sep = new javax.swing.JLabel();
        mm = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        hh.setFont(new java.awt.Font("Consolas", 1, 48)); // NOI18N
        hh.setText("00");
        getContentPane().add(hh, new java.awt.GridBagConstraints());

        sep.setFont(new java.awt.Font("Consolas", 1, 48)); // NOI18N
        sep.setText(":");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(14, 14, 14, 14);
        getContentPane().add(sep, gridBagConstraints);

        mm.setFont(new java.awt.Font("Consolas", 1, 48)); // NOI18N
        mm.setText("00");
        getContentPane().add(mm, new java.awt.GridBagConstraints());

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addAsListener(FocusEvent fe) {
        Lookup.getInstance().register(WatchViewer.class, this);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel hh;
    private javax.swing.JLabel mm;
    private javax.swing.JLabel sep;
    // End of variables declaration//GEN-END:variables

    @Override
    public void propertyChange(PropertyChangeEvent propertyChangeEvent) {

        updateView(); 
        if (Lookup.getInstance().getService(TimerService.class).getSecondes() % 2 == 0) {
            sep.setText(":");
        } else {
            sep.setText(" ");
        }
    }

    public void set() {
        watch.set();
        updateView();
    }

    public void mode() {
        watch.mode();
        updateView();
    }

    private void updateView() {
        hh.setText(String.format("%2d", watch.getValueForFirstPlace()));
        mm.setText(String.format("%2d", watch.getValueForSecondePlace()));
    }
}
